#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &kp N1    &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                                &kp UP &mo 1 &kp SPACE     &kp RET &mo 2 &mo 3
            >;
        };

        lower_layer {
            bindings = <
                &trans    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
                &trans    &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD &trans    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans
                &trans    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans    &trans    &trans    &trans    &trans    &trans    &trans
                                    &trans     &trans     &trans              &trans     &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
                &trans    &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
                &trans    &trans    &trans    &trans    &trans    &trans       &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans       &trans    &trans    &trans    &trans    &trans    &trans
                                    &trans    &trans    &trans                  &trans    &trans    &trans
            >;
        };

        top_layer {
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                &trans    &trans    &trans    &trans    &trans    &trans       &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans       &trans    &trans    &trans    &trans    &trans    &trans
                                    &trans    &trans    &trans                  &trans    &trans    &trans
            >;
        };
    };
};
